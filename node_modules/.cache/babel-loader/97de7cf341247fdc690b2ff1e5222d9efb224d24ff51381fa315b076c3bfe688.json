{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HasanAdeeb\\\\Desktop\\\\React\\\\swapi\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport Form from './components/Form';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [retryTimeout, setRetryTimeout] = useState(null);\n  useEffect(() => {\n    if (errorMessage) {\n      const timeout = setTimeout(fetchMoviesHandler, 5000);\n      setRetryTimeout(timeout);\n    } else {\n      if (retryTimeout) {\n        clearTimeout(retryTimeout);\n        setRetryTimeout(null);\n      }\n    }\n  }, [errorMessage]);\n  const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setErrorMessage(null);\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ... Retrying\");\n      }\n      const data = await response.json();\n      const transformMovies = data.results.map(movieData => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date\n        };\n      });\n      setMovies(transformMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setErrorMessage(error.message);\n      setIsLoading(false);\n    }\n  });\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler]);\n  function cancelRetryHandler() {\n    if (retryTimeout) {\n      clearTimeout(retryTimeout);\n      setRetryTimeout(null);\n      setErrorMessage(null);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMoviesHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...:-)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 23\n      }, this), !isLoading && errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [errorMessage, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: cancelRetryHandler,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), !isLoading && !errorMessage && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 64\n      }, this), !isLoading && !errorMessage && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fqlcVoHLi5eWK6VWRFEx2qf9P7o=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","MoviesList","Form","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","errorMessage","setErrorMessage","retryTimeout","setRetryTimeout","timeout","setTimeout","fetchMoviesHandler","clearTimeout","response","fetch","ok","Error","data","json","transformMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","error","message","cancelRetryHandler","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","_c","$RefreshReg$"],"sources":["C:/Users/HasanAdeeb/Desktop/React/swapi/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport MoviesList from './components/MoviesList';\nimport Form from './components/Form';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [retryTimeout, setRetryTimeout] = useState(null);\n\n  useEffect(() => {\n    if (errorMessage) {\n      const timeout = setTimeout(fetchMoviesHandler, 5000);\n      setRetryTimeout(timeout);\n    } else {\n      if (retryTimeout) {\n        clearTimeout(retryTimeout);\n        setRetryTimeout(null);\n      }\n    }\n  }, [errorMessage]);\n\n  const fetchMoviesHandler= useCallback(async ()=> {\n    setIsLoading(true);\n    setErrorMessage(null);\n\n    try {\n      const response = await fetch('https://swapi.dev/api/films/');\n      if (!response.ok) {\n        throw new Error(\"Something went wrong ... Retrying\");\n      }\n      const data = await response.json();\n\n      const transformMovies = data.results.map((movieData) => {\n        return {\n          id: movieData.episode_id,\n          title: movieData.title,\n          openingText: movieData.opening_crawl,\n          releaseDate: movieData.release_date,\n        };\n      });\n\n      setMovies(transformMovies);\n      setIsLoading(false);\n    } catch (error) {\n      setErrorMessage(error.message);\n      setIsLoading(false);\n    }\n  });\n\n  useEffect(() => {\n    fetchMoviesHandler(); \n  }, [fetchMoviesHandler]);\n\n  function cancelRetryHandler() {\n    if (retryTimeout) {\n      clearTimeout(retryTimeout);\n      setRetryTimeout(null);\n      setErrorMessage(null); \n    }\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <Form/>\n        \n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {isLoading && <p>Loading...:-)</p>}\n        {!isLoading && errorMessage && (\n          <p>\n            {errorMessage}\n            <button onClick={cancelRetryHandler}>Cancel</button>\n          </p>\n        )}\n        {!isLoading && !errorMessage && movies.length === 0 && <p>No Movies</p>}\n        {!isLoading && !errorMessage && <MoviesList movies={movies} />}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}